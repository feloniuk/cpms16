<?php

class Messages {
    
    // –û—Å–Ω–æ–≤–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    public static function welcome($username) {
        $name = $username ? "@$username" : "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á";
        return "ü§ñ –í—ñ—Ç–∞—é, $name!\n\n" .
               "–Ø –±–æ—Ç –¥–ª—è –ø–æ–¥–∞—á—ñ –∑–∞—è–≤–æ–∫ –Ω–∞ —Ä–µ–º–æ–Ω—Ç –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è —Ç–∞ –∑–∞–º—ñ–Ω –∫–∞—Ä—Ç—Ä–∏–¥–∂—ñ–≤.\n\n" .
               "–©–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏?";
    }
    
    public static function help() {
        return "üìã –î–æ–≤—ñ–¥–∫–∞ –ø–æ –±–æ—Ç—É:\n\n" .
               "üîß <b>–í–∏–∫–ª–∏–∫ –Ü–¢ –º–∞–π—Å—Ç—Ä–∞</b> - –ø–æ–¥–∞—Ç–∏ –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–º–æ–Ω—Ç –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è\n" .
               "üñ®Ô∏è <b>–ó–∞–º—ñ–Ω–∞ –∫–∞—Ä—Ç—Ä–∏–¥–∂–∞</b> - –∑–∞–ø–∏—Ç –Ω–∞ –∑–∞–º—ñ–Ω—É –∫–∞—Ä—Ç—Ä–∏–¥–∂–∞\n\n" .
               "üìû –ö–æ–º–∞–Ω–¥–∏:\n" .
               "/start - –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é\n" .
               "/help - –¶—è –¥–æ–≤—ñ–¥–∫–∞\n" .
               "/cancel - –°–∫–∞—Å—É–≤–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—É –¥—ñ—é\n" .
               "/admin - –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤)\n\n" .
               "‚ùì –Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.";
    }
    
    public static function mainMenu() {
        return "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é:";
    }
    
    public static function actionCanceled() {
        return "–î—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ. –û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –¥—ñ—é:";
    }
    
    public static function unknownCommand() {
        return "–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è /help –¥–ª—è –¥–æ–≤—ñ–¥–∫–∏.";
    }
    
    public static function unknownAction() {
        return "–ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è. –ü–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é:";
    }
    
    public static function unknownState() {
        return "–ù–µ–≤—ñ–¥–æ–º–∏–π —Å—Ç–∞–Ω. –ü–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é:";
    }
    
    public static function noAccess() {
        return "–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.";
    }
    
    // –°–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–∞ —Ä–µ–º–æ–Ω—Ç
    public static function repairStart() {
        return "üîß <b>–í–∏–∫–ª–∏–∫ –Ü–¢ –º–∞–π—Å—Ç—Ä–∞</b>\n\n–û–±–µ—Ä—ñ—Ç—å —Ñ—ñ–ª—ñ—é:";
    }
    
    public static function repairBranchSelected($branchName) {
        return "üîß <b>–í–∏–∫–ª–∏–∫ –Ü–¢ –º–∞–π—Å—Ç—Ä–∞</b>\n" .
               "–§—ñ–ª—ñ—è: <b>$branchName</b>\n\n" .
               "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∫–∞–±—ñ–Ω–µ—Ç—É:";
    }
    
    public static function repairRoomSelected($branchName, $roomNumber) {
        return "üîß <b>–í–∏–∫–ª–∏–∫ –Ü–¢ –º–∞–π—Å—Ç—Ä–∞</b>\n" .
               "–§—ñ–ª—ñ—è: <b>$branchName</b>\n" .
               "–ö–∞–±—ñ–Ω–µ—Ç: <b>$roomNumber</b>\n\n" .
               "–û–ø–∏—à—ñ—Ç—å –ø—Ä–æ–±–ª–µ–º—É (–≤—ñ–¥ 10 –¥–æ 1000 —Å–∏–º–≤–æ–ª—ñ–≤):";
    }
    
    public static function repairDescriptionEntered($branchName, $roomNumber, $description) {
        return "üîß <b>–í–∏–∫–ª–∏–∫ –Ü–¢ –º–∞–π—Å—Ç—Ä–∞</b>\n" .
               "–§—ñ–ª—ñ—è: <b>$branchName</b>\n" .
               "–ö–∞–±—ñ–Ω–µ—Ç: <b>$roomNumber</b>\n" .
               "–ü—Ä–æ–±–ª–µ–º–∞: <b>" . htmlspecialchars(substr($description, 0, 100)) . "...</b>\n\n" .
               "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –∑–≤'—è–∑–∫—É –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏':";
    }
    
    public static function repairSuccess($requestId, $branchName, $roomNumber, $description, $phone = null) {
        $message = "‚úÖ <b>–ó–∞—è–≤–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!</b>\n\n" .
                   "üìã <b>–î–µ—Ç–∞–ª—ñ –∑–∞—è–≤–∫–∏ ‚Ññ $requestId:</b>\n" .
                   "üè¢ –§—ñ–ª—ñ—è: $branchName\n" .
                   "üö™ –ö–∞–±—ñ–Ω–µ—Ç: $roomNumber\n" .
                   "üìù –ü—Ä–æ–±–ª–µ–º–∞: " . htmlspecialchars($description) . "\n";
        
        if (!empty($phone)) {
            $message .= "üìû –¢–µ–ª–µ—Ñ–æ–Ω: $phone\n";
        }
        
        $message .= "\nüìß –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –≤–∞—à—É –∑–∞—è–≤–∫—É.\n" .
                    "‚è∞ –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ –∑–≤'—è–∑–æ–∫ –≤—ñ–¥ –Ü–¢ –º–∞–π—Å—Ç—Ä–∞.";
        
        return $message;
    }
    
    public static function repairErrorInvalidRoom() {
        return "‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä –∫–∞–±—ñ–Ω–µ—Ç—É. –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∫–∞–±—ñ–Ω–µ—Ç—É (–¥–æ 50 —Å–∏–º–≤–æ–ª—ñ–≤):";
    }
    
    public static function repairErrorInvalidDescription() {
        return "‚ùå –û–ø–∏—Å –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ –≤—ñ–¥ 10 –¥–æ 1000 —Å–∏–º–≤–æ–ª—ñ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:";
    }
    
    public static function repairErrorInvalidPhone() {
        return "‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω—É. –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —É —Ñ–æ—Ä–º–∞—Ç—ñ +380XXXXXXXXX –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏':";
    }
    
    // –°–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∑–∞–º–µ–Ω—ã –∫–∞—Ä—Ç—Ä–∏–¥–∂–µ–π
    public static function cartridgeStart() {
        return "üñ®Ô∏è <b>–ó–∞–º—ñ–Ω–∞ –∫–∞—Ä—Ç—Ä–∏–¥–∂–∞</b>\n\n–û–±–µ—Ä—ñ—Ç—å —Ñ—ñ–ª—ñ—é:";
    }
    
    public static function cartridgeBranchSelected($branchName) {
        return "üñ®Ô∏è <b>–ó–∞–º—ñ–Ω–∞ –∫–∞—Ä—Ç—Ä–∏–¥–∂–∞</b>\n" .
               "–§—ñ–ª—ñ—è: <b>$branchName</b>\n\n" .
               "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∫–∞–±—ñ–Ω–µ—Ç—É:";
    }
    
    public static function cartridgeRoomSelected($branchName, $roomNumber) {
        return "üñ®Ô∏è <b>–ó–∞–º—ñ–Ω–∞ –∫–∞—Ä—Ç—Ä–∏–¥–∂–∞</b>\n" .
               "–§—ñ–ª—ñ—è: <b>$branchName</b>\n" .
               "–ö–∞–±—ñ–Ω–µ—Ç: <b>$roomNumber</b>\n\n" .
               "–í–≤–µ–¥—ñ—Ç—å —ñ–Ω–≤–µ–Ω—Ç–∞—Ä–Ω–∏–π –∞–±–æ —Å–µ—Ä—ñ–π–Ω–∏–π –Ω–æ–º–µ—Ä –ø—Ä–∏–Ω—Ç–µ—Ä–∞:";
    }
    
    public static function cartridgePrinterEntered($branchName, $roomNumber, $printerInfo) {
        return "üñ®Ô∏è <b>–ó–∞–º—ñ–Ω–∞ –∫–∞—Ä—Ç—Ä–∏–¥–∂–∞</b>\n" .
               "–§—ñ–ª—ñ—è: <b>$branchName</b>\n" .
               "–ö–∞–±—ñ–Ω–µ—Ç: <b>$roomNumber</b>\n" .
               "–ü—Ä–∏–Ω—Ç–µ—Ä: <b>$printerInfo</b>\n\n" .
               "–í–≤–µ–¥—ñ—Ç—å —Ç–∏–ø –∫–∞—Ä—Ç—Ä–∏–¥–∂–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, HP CF217A):";
    }
    
    public static function cartridgeSuccess($requestId, $branchName, $roomNumber, $printerInfo, $cartridgeType) {
        return "‚úÖ <b>–ó–∞–ø–∏—Ç –Ω–∞ –∑–∞–º—ñ–Ω—É –∫–∞—Ä—Ç—Ä–∏–¥–∂–∞ —Å—Ç–≤–æ—Ä–µ–Ω–æ!</b>\n\n" .
               "üìã <b>–î–µ—Ç–∞–ª—ñ –∑–∞–ø–∏—Ç—É ‚Ññ $requestId:</b>\n" .
               "üè¢ –§—ñ–ª—ñ—è: $branchName\n" .
               "üö™ –ö–∞–±—ñ–Ω–µ—Ç: $roomNumber\n" .
               "üñ®Ô∏è –ü—Ä–∏–Ω—Ç–µ—Ä: $printerInfo\n" .
               "üõí –ö–∞—Ä—Ç—Ä–∏–¥–∂: " . htmlspecialchars($cartridgeType) . "\n" .
               "\nüìß –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –≤–∞—à –∑–∞–ø–∏—Ç.";
    }
    
    public static function cartridgeErrorInvalidRoom() {
        return "‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä –∫–∞–±—ñ–Ω–µ—Ç—É. –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∫–∞–±—ñ–Ω–µ—Ç—É (–¥–æ 50 —Å–∏–º–≤–æ–ª—ñ–≤):";
    }
    
    public static function cartridgeErrorInvalidPrinter() {
        return "‚ùå –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –¥–ª—è –ø–æ—à—É–∫—É –ø—Ä–∏–Ω—Ç–µ—Ä–∞:";
    }
    
    public static function cartridgeErrorInvalidType() {
        return "‚ùå –í–≤–µ–¥—ñ—Ç—å —Ç–∏–ø –∫–∞—Ä—Ç—Ä–∏–¥–∂–∞:";
    }
    
    // –ê–¥–º–∏–Ω—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    public static function adminMenu() {
        return "‚öôÔ∏è –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å:";
    }
    
    public static function adminRepairsList($repairs, $page, $totalPages) {
        if (empty($repairs)) {
            return "üìã <b>–ó–∞—è–≤–∫–∏ –Ω–∞ —Ä–µ–º–æ–Ω—Ç</b>\n\n–ó–∞—è–≤–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.";
        }
        
        $message = "üìã <b>–ó–∞—è–≤–∫–∏ –Ω–∞ —Ä–µ–º–æ–Ω—Ç</b> (—Å—Ç–æ—Ä. $page –∑ $totalPages)\n\n";
        
        foreach ($repairs as $repair) {
            $status = self::getStatusEmoji($repair['status']);
            $date = date('d.m.Y H:i', strtotime($repair['created_at']));
            $username = $repair['username'] ? "@{$repair['username']}" : "ID: {$repair['user_telegram_id']}";
            
            $message .= "üîß <b>#{$repair['id']}</b> $status\n";
            $message .= "üìç {$repair['branch_name']} - –∫–∞–±. {$repair['room_number']}\n";
            $message .= "üìù " . self::truncateText($repair['description'], 50) . "\n";
            $message .= "üë§ $username | ‚è∞ $date\n\n";
        }
        
        return $message;
    }
    
    public static function adminRepairDetails($repair) {
        $status = self::getStatusEmoji($repair['status']);
        $date = date('d.m.Y H:i', strtotime($repair['created_at']));
        $updated = date('d.m.Y H:i', strtotime($repair['updated_at']));
        $username = $repair['username'] ? "@{$repair['username']}" : "ID: {$repair['user_telegram_id']}";
        
        $message = "üîß <b>–ó–∞—è–≤–∫–∞ ‚Ññ {$repair['id']}</b> $status\n\n";
        $message .= "üìç <b>–§—ñ–ª—ñ—è:</b> {$repair['branch_name']}\n";
        $message .= "üö™ <b>–ö–∞–±—ñ–Ω–µ—Ç:</b> {$repair['room_number']}\n";
        $message .= "üìù <b>–ü—Ä–æ–±–ª–µ–º–∞:</b>\n" . htmlspecialchars($repair['description']) . "\n\n";
        $message .= "üë§ <b>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:</b> $username\n";
        
        if (!empty($repair['phone'])) {
            $message .= "üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {$repair['phone']}\n";
        }
        
        $message .= "‚è∞ <b>–°—Ç–≤–æ—Ä–µ–Ω–æ:</b> $date\n";
        $message .= "üîÑ <b>–û–Ω–æ–≤–ª–µ–Ω–æ:</b> $updated\n";
        
        return $message;
    }
    
    public static function adminCartridgesList($cartridges, $page, $totalPages) {
        if (empty($cartridges)) {
            return "üñ®Ô∏è <b>–Ü—Å—Ç–æ—Ä—ñ—è –∫–∞—Ä—Ç—Ä–∏–¥–∂—ñ–≤</b>\n\n–ó–∞–ø–∏—Å—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.";
        }
        
        $message = "üñ®Ô∏è <b>–Ü—Å—Ç–æ—Ä—ñ—è –∫–∞—Ä—Ç—Ä–∏–¥–∂—ñ–≤</b> (—Å—Ç–æ—Ä. $page –∑ $totalPages)\n\n";
        
        foreach ($cartridges as $cartridge) {
            $date = date('d.m.Y', strtotime($cartridge['replacement_date']));
            $username = $cartridge['username'] ? "@{$cartridge['username']}" : "ID: {$cartridge['user_telegram_id']}";
            
            $message .= "üñ®Ô∏è <b>#{$cartridge['id']}</b>\n";
            $message .= "üìç {$cartridge['branch_name']} - –∫–∞–±. {$cartridge['room_number']}\n";
            $message .= "üõí {$cartridge['cartridge_type']}\n";
            $message .= "üë§ $username | üìÖ $date\n\n";
        }
        
        return $message;
    }
    
    public static function adminBranchesList($branches) {
        if (empty($branches)) {
            return "üè¢ <b>–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ñ—ñ–ª—ñ—è–º–∏</b>\n\n–§—ñ–ª—ñ–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.";
        }
        
        $message = "üè¢ <b>–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ñ—ñ–ª—ñ—è–º–∏</b>\n\n";
        
        foreach ($branches as $branch) {
            $status = $branch['is_active'] ? '‚úÖ' : '‚ùå';
            $message .= "$status <b>{$branch['name']}</b> (ID: {$branch['id']})\n";
        }
        
        return $message;
    }
    
    public static function adminAddBranch() {
        return "üè¢ <b>–î–æ–¥–∞—Ç–∏ —Ñ—ñ–ª—ñ—é</b>\n\n–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –Ω–æ–≤–æ—ó —Ñ—ñ–ª—ñ—ó:";
    }
    
    public static function adminBranchAdded($branchName) {
        return "‚úÖ –§—ñ–ª—ñ—é '$branchName' —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!";
    }
    
    public static function adminBranchExists() {
        return "‚ùå –§—ñ–ª—ñ—è –∑ —Ç–∞–∫–æ—é –Ω–∞–∑–≤–æ—é –≤–∂–µ —ñ—Å–Ω—É—î!";
    }
    
    public static function adminBranchInvalidName() {
        return "‚ùå –ù–∞–∑–≤–∞ —Ñ—ñ–ª—ñ—ó –ø–æ–≤–∏–Ω–Ω–∞ –º—ñ—Å—Ç–∏—Ç–∏ –≤—ñ–¥ 2 –¥–æ 255 —Å–∏–º–≤–æ–ª—ñ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:";
    }
    
    public static function adminInventoryStart() {
        return "üìã <b>–Ü–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü—ñ—è –∫–∞–±—ñ–Ω–µ—Ç—É</b>\n\n–û–±–µ—Ä—ñ—Ç—å —Ñ—ñ–ª—ñ—é:";
    }
    
    public static function adminInventoryRoomPrompt($branchName) {
        return "üìã <b>–Ü–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü—ñ—è –∫–∞–±—ñ–Ω–µ—Ç—É</b>\n" .
               "–§—ñ–ª—ñ—è: <b>$branchName</b>\n\n" .
               "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∫–∞–±—ñ–Ω–µ—Ç—É:";
    }
    
    public static function adminInventoryEquipmentPrompt($branchName, $roomNumber) {
        return "üìã <b>–Ü–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü—ñ—è –∫–∞–±—ñ–Ω–µ—Ç—É</b>\n" .
               "–§—ñ–ª—ñ—è: <b>$branchName</b>\n" .
               "–ö–∞–±—ñ–Ω–µ—Ç: <b>$roomNumber</b>\n\n" .
               "–í–≤–µ–¥—ñ—Ç—å –¥–∞–Ω—ñ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è —á–µ—Ä–µ–∑ –∫–æ–º—É:\n" .
               "<code>–¢–∏–ø, –ë—Ä–µ–Ω–¥, –ú–æ–¥–µ–ª—å, –°–µ—Ä—ñ–π–Ω–∏–π –Ω–æ–º–µ—Ä, –Ü–Ω–≤–µ–Ω—Ç–∞—Ä–Ω–∏–π –Ω–æ–º–µ—Ä</code>\n\n" .
               "–ü—Ä–∏–∫–ª–∞–¥:\n" .
               "<code>–ü—Ä–∏–Ω—Ç–µ—Ä, HP, LaserJet Pro, SN123456, INV001</code>";
    }
    
    public static function adminInventoryAdded($equipmentType, $inventoryNumber) {
        return "‚úÖ –û–±–ª–∞–¥–Ω–∞–Ω–Ω—è –¥–æ–¥–∞–Ω–æ:\n" .
               "üñ•Ô∏è $equipmentType\n" .
               "üî¢ –Ü–Ω–≤. –Ω–æ–º–µ—Ä: $inventoryNumber";
    }
    
    public static function adminInventoryError() {
        return "‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–∏—Ö. –í–≤–µ–¥—ñ—Ç—å —á–µ—Ä–µ–∑ –∫–æ–º—É:\n" .
               "<code>–¢–∏–ø, –ë—Ä–µ–Ω–¥, –ú–æ–¥–µ–ª—å, –°–µ—Ä—ñ–π–Ω–∏–π –Ω–æ–º–µ—Ä, –Ü–Ω–≤–µ–Ω—Ç–∞—Ä–Ω–∏–π –Ω–æ–º–µ—Ä</code>";
    }
    
    public static function adminSearchStart() {
        return "üîç <b>–ü–æ—à—É–∫ –ø–æ —ñ–Ω–≤–µ–Ω—Ç–∞—Ä—é</b>\n\n–í–≤–µ–¥—ñ—Ç—å –ø–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç (—ñ–Ω–≤–µ–Ω—Ç–∞—Ä–Ω–∏–π –Ω–æ–º–µ—Ä, —Å–µ—Ä—ñ–π–Ω–∏–π –Ω–æ–º–µ—Ä –∞–±–æ –Ω–∞–∑–≤—É):";
    }
    
    public static function adminSearchResults($results) {
        if (empty($results)) {
            return "üîç <b>–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É</b>\n\n–ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.";
        }
        
        $message = "üîç <b>–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É</b>\n\n";
        
        foreach ($results as $item) {
            $message .= "üñ•Ô∏è <b>{$item['equipment_type']}</b>\n";
            $message .= "üè¢ {$item['branch_name']} - –∫–∞–±. {$item['room_number']}\n";
            $message .= "üîß {$item['brand']} {$item['model']}\n";
            $message .= "üî¢ –Ü–Ω–≤: {$item['inventory_number']}";
            
            if (!empty($item['serial_number'])) {
                $message .= " | SN: {$item['serial_number']}";
            }
            
            $message .= "\n\n";
        }
        
        return $message;
    }
    
    public static function adminReports() {
        return "üìä <b>–ó–≤—ñ—Ç–∏</b>\n\n–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –∑–≤—ñ—Ç—É:";
    }
    
    public static function statusUpdated($newStatus) {
        $statusText = self::getStatusText($newStatus);
        return "‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞: <b>$statusText</b>";
    }
    
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    public static function notifyNewRepair($requestId, $branchName, $roomNumber, $description, $phone, $username, $userId) {
        $message = "üîß <b>–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–º–æ–Ω—Ç ‚Ññ $requestId!</b>\n\n";
        $message .= "üìç –§—ñ–ª—ñ—è: <b>$branchName</b>\n";
        $message .= "üè¢ –ö–∞–±—ñ–Ω–µ—Ç: <b>$roomNumber</b>\n";
        $message .= "üìù –ü—Ä–æ–±–ª–µ–º–∞: " . htmlspecialchars($description) . "\n";
        $message .= "üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: " . ($username ? "@$username" : "ID: $userId") . "\n";
        
        if (!empty($phone)) {
            $message .= "üìû –¢–µ–ª–µ—Ñ–æ–Ω: $phone\n";
        }
        
        $message .= "\n‚è∞ " . date('d.m.Y H:i');
        
        return $message;
    }
    
    public static function notifyNewCartridge($requestId, $branchName, $roomNumber, $printerInfo, $cartridgeType, $username, $userId) {
        $message = "üñ®Ô∏è <b>–ó–∞–ø–∏—Ç –Ω–∞ –∑–∞–º—ñ–Ω—É –∫–∞—Ä—Ç—Ä–∏–¥–∂–∞ ‚Ññ $requestId!</b>\n\n";
        $message .= "üìç –§—ñ–ª—ñ—è: <b>$branchName</b>\n";
        $message .= "üè¢ –ö–∞–±—ñ–Ω–µ—Ç: <b>$roomNumber</b>\n";
        $message .= "üñ®Ô∏è –ü—Ä–∏–Ω—Ç–µ—Ä: " . htmlspecialchars($printerInfo) . "\n";
        $message .= "üõí –ö–∞—Ä—Ç—Ä–∏–¥–∂: " . htmlspecialchars($cartridgeType) . "\n";
        $message .= "üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: " . ($username ? "@$username" : "ID: $userId") . "\n";
        $message .= "\n‚è∞ " . date('d.m.Y H:i');
        
        return $message;
    }
    
    // –û–±—â–∏–µ –æ—à–∏–±–∫–∏
    public static function branchesUnavailable() {
        return "–ù–∞ –∂–∞–ª—å, —Ñ—ñ–ª—ñ—ó –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.";
    }
    
    public static function branchNotFound() {
        return "–ü–æ–º–∏–ª–∫–∞: —Ñ—ñ–ª—ñ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.";
    }
    
    public static function dataError() {
        return "‚ùå –ü–æ–º–∏–ª–∫–∞: –Ω–µ –≤—Å—ñ –¥–∞–Ω—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:";
    }
    
    public static function systemError() {
        return "‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.";
    }
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    private static function getStatusEmoji($status) {
        switch ($status) {
            case '–Ω–æ–≤–∞': return 'üÜï';
            case '–≤_—Ä–æ–±–æ—Ç—ñ': return '‚öôÔ∏è';
            case '–≤–∏–∫–æ–Ω–∞–Ω–∞': return '‚úÖ';
            default: return '‚ùì';
        }
    }
    
    private static function getStatusText($status) {
        switch ($status) {
            case '–Ω–æ–≤–∞': return '–ù–æ–≤–∞';
            case '–≤_—Ä–æ–±–æ—Ç—ñ': return '–í —Ä–æ–±–æ—Ç—ñ';
            case '–≤–∏–∫–æ–Ω–∞–Ω–∞': return '–í–∏–∫–æ–Ω–∞–Ω–∞';
            default: return '–ù–µ–≤—ñ–¥–æ–º–∏–π';
        }
    }
    
    private static function truncateText($text, $length) {
        return strlen($text) > $length ? substr($text, 0, $length) . '...' : $text;
    }
}