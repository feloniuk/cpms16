<?php
// –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook Telegram –±–æ—Ç–∞

$config = require __DIR__ . '/config/telegram.php';
$appConfig = require __DIR__ . '/config/config.php';

$bot_token = $config['bot_token'];
$webhook_url = $config['webhook_url'];

if ($bot_token === 'YOUR_BOT_TOKEN_HERE' || $bot_token === '7663510884:AAE1BAZZpW8EqJRasTD8eG07usMx_ZZzMdQ') {
    echo "‚ùå –ü–æ–º–∏–ª–∫–∞: –ü–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞!\n";
    echo "–í—ñ–¥—Ä–µ–¥–∞–≥—É–π—Ç–µ —Ñ–∞–π–ª config/telegram.php —Ç–∞ –¥–æ–¥–∞–π—Ç–µ —Ç–æ–∫–µ–Ω –≤—ñ–¥ @BotFather\n";
    exit(1);
}

echo "üîÑ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è webhook –¥–ª—è Telegram –±–æ—Ç–∞...\n";
echo "Bot Token: " . substr($bot_token, 0, 10) . "...\n";
echo "Webhook URL: $webhook_url\n\n";

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ñ–∞–π–ª–∞ webhook
if (!file_exists(__DIR__ . '/telegram-bot/webhook.php')) {
    echo "‚ùå –ü–æ–º–∏–ª–∫–∞: –§–∞–π–ª webhook.php –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!\n";
    echo "–°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ–∞–π–ª telegram-bot/webhook.php\n";
    exit(1);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ Telegram API
function telegramRequest($method, $data, $token) {
    $url = "https://api.telegram.org/bot$token/$method";
    
    $ch = curl_init();
    curl_setopt_array($ch, [
        CURLOPT_URL => $url,
        CURLOPT_POST => true,
        CURLOPT_POSTFIELDS => $data,
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_SSL_VERIFYPEER => true,
        CURLOPT_TIMEOUT => 30,
        CURLOPT_CONNECTTIMEOUT => 10,
        CURLOPT_USERAGENT => 'IT-Support-Bot/1.0'
    ]);
    
    $response = curl_exec($ch);
    $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    
    if (curl_error($ch)) {
        $error = curl_error($ch);
        curl_close($ch);
        throw new Exception("cURL error: $error");
    }
    
    curl_close($ch);
    
    $decoded = json_decode($response, true);
    
    if ($http_code !== 200) {
        throw new Exception("HTTP error: $http_code. Response: " . ($response ?: 'empty'));
    }
    
    if (!$decoded) {
        throw new Exception("Invalid JSON response: " . ($response ?: 'empty'));
    }
    
    return $decoded;
}

try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ - –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
    echo "üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞...\n";
    $botInfo = telegramRequest('getMe', [], $bot_token);
    
    if (!$botInfo['ok']) {
        throw new Exception("–ù–µ–≤—ñ—Ä–Ω–∏–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞: " . ($botInfo['description'] ?? 'Unknown error'));
    }
    
    echo "‚úÖ –ë–æ—Ç –∑–Ω–∞–π–¥–µ–Ω–æ: @{$botInfo['result']['username']} ({$botInfo['result']['first_name']})\n\n";
    
    // 2. –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ webhook
    echo "üîÑ –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å—Ç–∞—Ä–æ–≥–æ webhook...\n";
    $deleteResult = telegramRequest('deleteWebhook', ['drop_pending_updates' => true], $bot_token);
    
    if ($deleteResult['ok']) {
        echo "‚úÖ –°—Ç–∞—Ä–∏–π webhook –≤–∏–¥–∞–ª–µ–Ω–æ\n";
    } else {
        echo "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ webhook: {$deleteResult['description']}\n";
    }
    
    // –ü–∞—É–∑–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    sleep(1);
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ webhook URL
    echo "üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ webhook URL...\n";
    $ch = curl_init();
    curl_setopt_array($ch, [
        CURLOPT_URL => $webhook_url,
        CURLOPT_POST => true,
        CURLOPT_POSTFIELDS => '{"test": true}',
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_TIMEOUT => 10,
        CURLOPT_HTTPHEADER => ['Content-Type: application/json'],
        CURLOPT_SSL_VERIFYPEER => true,
        CURLOPT_FOLLOWLOCATION => true
    ]);
    
    $response = curl_exec($ch);
    $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    $curl_error = curl_error($ch);
    curl_close($ch);
    
    if ($curl_error) {
        echo "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ webhook: $curl_error\n";
    } elseif ($http_code === 200) {
        echo "‚úÖ Webhook URL –¥–æ—Å—Ç—É–ø–Ω–∏–π (HTTP $http_code)\n";
    } else {
        echo "‚ö†Ô∏è Webhook URL –ø–æ–≤–µ—Ä—Ç–∞—î –∫–æ–¥: HTTP $http_code\n";
        if ($response) {
            echo "–í—ñ–¥–ø–æ–≤—ñ–¥—å: " . substr($response, 0, 200) . "\n";
        }
    }
    
    // 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ webhook
    echo "üîÑ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ webhook...\n";
    $webhookData = [
        'url' => $webhook_url,
        'max_connections' => 100,
        'allowed_updates' => json_encode(['message', 'callback_query', 'inline_query']),
        'drop_pending_updates' => true
    ];
    
    $setResult = telegramRequest('setWebhook', $webhookData, $bot_token);
    
    if (!$setResult['ok']) {
        throw new Exception("–ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è webhook: " . $setResult['description']);
    }
    
    echo "‚úÖ Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!\n";
    
    // –ü–∞—É–∑–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    sleep(1);
    
    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook
    echo "üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ webhook...\n";
    $webhookInfo = telegramRequest('getWebhookInfo', [], $bot_token);
    
    if ($webhookInfo['ok']) {
        $info = $webhookInfo['result'];
        echo "‚úÖ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ webhook:\n";
        echo "   URL: {$info['url']}\n";
        echo "   –ú–∞—î —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç: " . ($info['has_custom_certificate'] ? '–¢–∞–∫' : '–ù—ñ') . "\n";
        echo "   –ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ—á—ñ–∫—É—é—á–∏—Ö –æ–Ω–æ–≤–ª–µ–Ω—å: {$info['pending_update_count']}\n";
        
        if (isset($info['last_error_date'])) {
            echo "   ‚ö†Ô∏è –û—Å—Ç–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∞: " . date('Y-m-d H:i:s', $info['last_error_date']) . "\n";
            echo "   –û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏: {$info['last_error_message']}\n";
        }
        
        if (isset($info['max_connections'])) {
            echo "   –ú–∞–∫—Å–∏–º—É–º –∑'—î–¥–Ω–∞–Ω—å: {$info['max_connections']}\n";
        }
        
        if (isset($info['allowed_updates'])) {
            echo "   –î–æ–∑–≤–æ–ª–µ–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: " . implode(', ', $info['allowed_updates']) . "\n";
        }
    }
    
    // 6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
    echo "\nüîÑ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞...\n";
    $commands = [
        ['command' => 'start', 'description' => '–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é'],
        ['command' => 'help', 'description' => '–î–æ–≤—ñ–¥–∫–∞ –ø–æ –±–æ—Ç—É'],
        ['command' => 'cancel', 'description' => '–°–∫–∞—Å—É–≤–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—É –¥—ñ—é'],
        ['command' => 'admin', 'description' => '–ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤)']
    ];
    
    $commandsResult = telegramRequest('setMyCommands', [
        'commands' => json_encode($commands),
        'scope' => json_encode(['type' => 'default'])
    ], $bot_token);
    
    if ($commandsResult['ok']) {
        echo "‚úÖ –ö–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ\n";
    } else {
        echo "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥: {$commandsResult['description']}\n";
    }
    
    // 7. –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ webhook
    echo "\nüîÑ –¢–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Ç –¥–æ webhook...\n";
    $testData = json_encode([
        'update_id' => 999999999,
        'message' => [
            'message_id' => 1,
            'from' => [
                'id' => 999999999,
                'is_bot' => false,
                'first_name' => 'Test',
                'username' => 'test_user'
            ],
            'chat' => [
                'id' => 999999999,
                'first_name' => 'Test',
                'username' => 'test_user',
                'type' => 'private'
            ],
            'date' => time(),
            'text' => '/start'
        ]
    ]);
    
    $ch = curl_init();
    curl_setopt_array($ch, [
        CURLOPT_URL => $webhook_url,
        CURLOPT_POST => true,
        CURLOPT_POSTFIELDS => $testData,
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_TIMEOUT => 10,
        CURLOPT_HTTPHEADER => ['Content-Type: application/json'],
        CURLOPT_SSL_VERIFYPEER => true
    ]);
    
    $testResponse = curl_exec($ch);
    $testHttpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    $testError = curl_error($ch);
    curl_close($ch);
    
    if ($testError) {
        echo "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø–∏—Ç—É: $testError\n";
    } elseif ($testHttpCode === 200) {
        echo "‚úÖ –¢–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Ç —É—Å–ø—ñ—à–Ω–∏–π (HTTP $testHttpCode)\n";
        if ($testResponse === 'OK') {
            echo "‚úÖ Webhook –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∫–æ—Ä–µ–∫—Ç–Ω–æ\n";
        } else {
            echo "‚ö†Ô∏è –ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: $testResponse\n";
        }
    } else {
        echo "‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Ç –ø–æ–≤–µ—Ä–Ω—É–≤ –∫–æ–¥: HTTP $testHttpCode\n";
        echo "–í—ñ–¥–ø–æ–≤—ñ–¥—å: " . substr($testResponse, 0, 200) . "\n";
    }
    
    echo "\nüéâ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n\n";
    echo "üìù –ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:\n";
    echo "1. –î–æ–¥–∞–π—Ç–µ —Å–≤—ñ–π Telegram ID —è–∫ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n";
    echo "   php add_admin.php YOUR_TELEGRAM_ID \"–í–∞—à–µ —ñ–º'—è\"\n";
    echo "2. –ù–∞–ø–∏—à—ñ—Ç—å –±–æ—Ç—É /start –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è\n";
    echo "3. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏ –≤ –ø–∞–ø—Ü—ñ logs/ –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö\n";
    echo "4. –Ø–∫—â–æ —â–æ—Å—å –Ω–µ –ø—Ä–∞—Ü—é—î, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ debug.php\n\n";
    echo "üîó –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –±–æ—Ç–∞: https://t.me/{$botInfo['result']['username']}\n";
    
    // –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º
    file_put_contents(__DIR__ . '/logs/webhook_status.txt', 
        "Webhook –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ: " . date('Y-m-d H:i:s') . "\n" .
        "Bot: @{$botInfo['result']['username']}\n" .
        "URL: $webhook_url\n" .
        "–°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–Ω–∏–π\n"
    );
    
} catch (Exception $e) {
    echo "‚ùå –ü–æ–º–∏–ª–∫–∞: " . $e->getMessage() . "\n";
    
    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
    file_put_contents(__DIR__ . '/logs/webhook_setup_error.txt', 
        date('Y-m-d H:i:s') . " - " . $e->getMessage() . "\n", 
        FILE_APPEND
    );
    
    exit(1);
}
?>